package com.github.olegik1719.study.learnup;

/**********************************************************************************************************************
 * Создайте класс `IndexStorage` с тремя методами - `size()`, `get(int index)` и `reverse`.
 * Пусть размер заполняется конструктором, а `get` возвращает то же, что и в прошлом задании (т.е. индекс или -индекс в зависимости от чётности).
 * Напишите метод `reverse()`, который возвращает массив, заполненный элементами в обратном порядке.
 * Сделайте этот класс без хранения массивов в полях.
 **********************************************************************************************************************/
public class IndexStorage {
    private final int size;

    /*************************************************************
     * размер заполняется конструктором
     * @param size -- размер хранилища.
     **************************************************************/
    public IndexStorage(int size) {
        if (size < 1) {
            throw new IllegalArgumentException("Размер хранилища должен быть натуральным числом!");
        }
        this.size = size;
    }

    /*************************************************************
     * Возвращает элемент из хранилища
     * @param i -- индекс элемента
     * @return элемент на этой позиции
     *************************************************************/
    public int get(int i) {
        if (i > size - 1 || i < 0) {
            throw new IndexOutOfBoundsException("Значение индекса " + i + " выходит за границы хранилища.");
        }
        return i % 2 == 0 ? i : -i;
    }


    public int size() {
        return this.size;
    }

    /*************************************************************
     * метод `reverse()`.
     * @return массив, заполненный элементами в обратном порядке
     *************************************************************/
    public int[] reverse() {
        int[] result = new int[size];
        for (int i = 0; i < size; i++) {
            result[size - i - 1] = get(i);
        }
        return result;
    }
}
